cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
cont_0 <- 0
cont_1 <- 0
rep    <- 1000
for (i in 1:rep){
sample1 = rnorm(16, 0, 1)
sample2 = rnorm(16, 1, 1)
cont_0 = cont_0 + as.numeric(mean(sample1) > 0.41)
cont_1 = cont_1 + as.numeric(mean(sample2) > 0.41)
}
cont_0 / rep
cont_1 / rep
set.seed(42)  # Para garantir a reprodutibilidade
# Parâmetros
n <- 16                # Tamanho da amostra
mu0 <- 0               # Valor de mu sob H0
mu1 <- 1               # Valor de mu sob H1
sigma <- 1             # Desvio padrão conhecido
alpha <- 0.05          # Nível de significância
num_rep <- 1000        # Número de replicações Monte Carlo
z_crit <- qnorm(1 - alpha)  # Valor crítico para o teste unilateral
# Função para calcular o teste
calc_test <- function(sample, mu0, sigma, z_crit) {
z <- (mean(sample) - mu0) / (sigma / sqrt(n))
return(z > z_crit)  # Teste unilateral à direita
}
# Simulação do erro tipo I
rej_H0 <- replicate(num_rep, {
sample <- rnorm(n, mean = mu0, sd = sigma)
calc_test(sample, mu0, sigma, z_crit)
})
# Estimativa do erro tipo I
erro_tipo_I <- mean(rej_H0)
cat("Erro Tipo I (alpha) estimado:", erro_tipo_I, "\n")
# Simulação do poder do teste
rej_H1 <- replicate(num_rep, {
sample <- rnorm(n, mean = mu1, sd = sigma)
calc_test(sample, mu0, sigma, z_crit)
})
# Estimativa do poder
poder_teste <- mean(rej_H1)
cat("Poder do teste estimado:", poder_teste, "\n")
qnorm(0.05)
qnorm(0.01)
1/4
qnorm(0.05, 0, 0.25)
qnorm(0.05, 1, 0.25)
mu          <- c(0,1)
mu[1]
mu[2]
val_critico <- qnorm(alpha, mu[1], var/sqrt(n))
n           <- 16
rep         <- 1000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n))
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
val_critico
n           <- 16
rep         <- 1000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > 0.41)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 1000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > 0.41)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 1000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > 0.41)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 100000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > 0.41)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 100000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > 0.41)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 1000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > val_critico)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
n           <- 16
rep         <- 100000
mu          <- c(0,1)
alpha       <- 0.05
var         <- 1
val_critico <- qnorm(alpha, mu[1], var/sqrt(n), lower.tail = F)
cont_0 <- 0
cont_1 <- 0
for (i in 1:rep){
sample <- rnorm(n, mu[1], var)
cont_0 <- cont_0 + as.numeric(mean(sample) > val_critico)
sample <- rnorm(n, mu[2], var)
cont_1 <- cont_1 + as.numeric(mean(sample) > val_critico)
}
cat("Erro Tipo I (alpha) estimado:", cont_0 / rep, "\n")
cat("Poder do teste estimado:", cont_1 / rep, "\n")
